<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lojikli Learning Games</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        /* Original CSS styles */
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
            color: #333;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 2px solid #e9ecef;
        }
        
        .logo {
            font-size: 28px;
            font-weight: bold;
            color: #3498db;
        }
        
        .logo span {
            color: #e74c3c;
        }
        
        .search-bar {
            position: relative;
            width: 300px;
        }
        
        #searchBox {
            width: 100%;
            padding: 10px 15px;
            border: 1px solid #ddd;
            border-radius: 25px;
            font-size: 14px;
            outline: none;
            transition: all 0.3s;
        }
        
        #searchBox:focus {
            border-color: #3498db;
            box-shadow: 0 0 5px rgba(52, 152, 219, 0.5);
        }
        
        .search-icon {
            position: absolute;
            right: 15px;
            top: 10px;
            color: #999;
        }
        
        .age-tabs {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .age-tab {
            padding: 12px 25px;
            background-color: #f1f1f1;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s;
            text-align: center;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        }
        
        .age-tab.active {
            background-color: #3498db;
            color: white;
            box-shadow: 0 4px 8px rgba(52, 152, 219, 0.3);
        }
        
        .age-tab:hover:not(.active) {
            background-color: #e9ecef;
        }
        
        .categories {
            display: flex;
            flex-wrap: wrap;
            gap: 12px;
            margin-bottom: 25px;
        }
        
        .category {
            padding: 8px 20px;
            background-color: #f1f1f1;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s;
            font-size: 14px;
            font-weight: 500;
        }
        
        .category.active {
            background-color: #3498db;
            color: white;
        }
        
        .category:hover:not(.active) {
            background-color: #e9ecef;
        }
        
        .section-title {
            font-size: 24px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            color: #2c3e50;
        }
        
        .new-badge {
            background-color: #e74c3c;
            color: white;
            padding: 3px 10px;
            border-radius: 20px;
            font-size: 12px;
            margin-left: 10px;
            text-transform: uppercase;
            font-weight: bold;
        }
        
        .slider-wrapper {
            position: relative;
            margin-bottom: 40px;
            padding: 15px 0;
        }
        
        .slider-container {
            display: flex;
            overflow-x: auto;
            scroll-behavior: smooth;
            padding: 10px 5px;
            gap: 20px;
            scrollbar-width: none; /* Firefox */
            -ms-overflow-style: none; /* IE and Edge */
        }
        
        .slider-container::-webkit-scrollbar {
            display: none; /* Chrome, Safari, Opera */
        }
        
        .prev-arrow, .next-arrow {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            width: 40px;
            height: 40px;
            background-color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            z-index: 10;
            transition: all 0.3s;
        }
        
        .prev-arrow {
            left: -15px;
        }
        
        .next-arrow {
            right: -15px;
        }
        
        .prev-arrow:hover, .next-arrow:hover {
            background-color: #f8f9fa;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }
        
        .game-card {
            min-width: 250px;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 3px 15px rgba(0,0,0,0.08);
            padding: 20px;
            transition: all 0.3s;
            cursor: pointer;
            border: 1px solid #f1f1f1;
        }
        
        .game-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
            border-color: #e1e5ea;
        }
        
        .game-icon {
            width: 50px;
            height: 50px;
            border-radius: 10px;
            background-color: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 15px;
            font-size: 24px;
            color: #3498db;
        }
        
        .game-info h3 {
            margin: 0 0 8px 0;
            font-size: 18px;
            color: #2c3e50;
        }
        
        .game-category {
            display: inline-block;
            padding: 3px 12px;
            background-color: #f1f8fe;
            color: #3498db;
            border-radius: 20px;
            font-size: 12px;
            margin-bottom: 10px;
            font-weight: 500;
        }
        
        .game-info p {
            margin: 0;
            color: #7f8c8d;
            font-size: 14px;
            line-height: 1.5;
        }
        
        .apps-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        
        .app-card {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
            padding: 15px;
            display: flex;
            align-items: center;
            gap: 15px;
            cursor: pointer;
            transition: all 0.3s;
            border: 1px solid #f1f1f1;
            opacity: 0; /* Start invisible for animation */
            animation: fadeIn 0.5s forwards;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .app-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 15px rgba(0,0,0,0.08);
            border-color: #e1e5ea;
        }
        
        .app-icon {
            width: 40px;
            height: 40px;
            background-color: #f8f9fa;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #3498db;
            font-size: 18px;
        }
        
        .app-info {
            flex: 1;
        }
        
        .app-name {
            margin: 0 0 5px 0;
            font-size: 16px;
            font-weight: 600;
            color: #2c3e50;
        }
        
        .app-category {
            display: inline-block;
            padding: 2px 10px;
            background-color: #f1f8fe;
            color: #3498db;
            border-radius: 15px;
            font-size: 11px;
            font-weight: 500;
        }
        
        .achievements {
            margin-top: 50px;
            padding: 25px;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 3px 15px rgba(0,0,0,0.05);
            border: 1px solid #f1f1f1;
        }
        
        .achievements-title {
            font-size: 24px;
            margin-bottom: 25px;
            color: #2c3e50;
        }
        
        .achievements-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }
        
        .achievement-card {
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 10px;
            border: 1px solid #f1f1f1;
        }
        
        .achievement-title {
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 12px;
            font-weight: 600;
            color: #2c3e50;
        }
        
        .achievement-icon {
            width: 30px;
            height: 30px;
            background-color: #f1f8fe;
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #3498db;
        }
        
        .achievement-progress {
            margin-top: 15px;
            height: 8px;
            background-color: #ecf0f1;
            border-radius: 4px;
            overflow: hidden;
        }
        
        .achievement-progress-bar {
            height: 100%;
            background-color: #2ecc71;
            border-radius: 4px;
            width: 0; /* Start at 0 for animation */
            transition: width 1.2s ease-out;
        }
        
        footer {
            margin-top: 60px;
            padding: 30px 0;
            text-align: center;
            color: #7f8c8d;
            font-size: 14px;
            border-top: 1px solid #ecf0f1;
        }
        
        .footer-links {
            display: flex;
            justify-content: center;
            gap: 25px;
            margin-top: 15px;
        }
        
        .footer-link {
            color: #7f8c8d;
            text-decoration: none;
            transition: color 0.3s;
        }
        
        .footer-link:hover {
            color: #3498db;
        }
        
        /* Media queries for responsiveness */
        @media (max-width: 768px) {
            header {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .search-bar {
                width: 100%;
                margin-top: 15px;
            }
            
            .age-tabs {
                width: 100%;
            }
            
            .age-tab {
                flex: 1;
            }
            
            .apps-container {
                grid-template-columns: 1fr;
            }
            
            .achievements-grid {
                grid-template-columns: 1fr;
            }
            
            .prev-arrow, .next-arrow {
                width: 35px;
                height: 35px;
            }
        }
        
        /* Debug info styles */
        #debugInfo {
            position: fixed;
            bottom: 10px;
            right: 10px;
            background: #f8f9fa;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 12px;
            color: #7f8c8d;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            z-index: 100;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="logo">Lojik<span>li</span> Learning Games</div>
            <div class="search-bar">
                <input type="text" id="searchBox" placeholder="Search games...">
                <i class="fas fa-search search-icon"></i>
            </div>
        </header>
        
        <div class="age-tabs">
            <div class="age-tab active" data-age="toddler">2 Year Old</div>
            <div class="age-tab" data-age="elementary">5 Year Old</div>
        </div>
        
        <div class="slider-wrapper">
            <div class="section-title">
                Recently Updated Games <span class="new-badge">NEW</span>
            </div>
            <div class="prev-arrow"><i class="fas fa-chevron-left"></i></div>
            <div class="slider-container" id="new-games-slider">
                <!-- New games will be dynamically added here -->
            </div>
            <div class="next-arrow"><i class="fas fa-chevron-right"></i></div>
        </div>
        
        <div id="toddler-apps">
            <div class="categories">
                <div class="category active" data-category="all">All</div>
                <div class="category" data-category="math">Math</div>
                <div class="category" data-category="music">Music</div>
                <div class="category" data-category="language">Language</div>
                <div class="category" data-category="geography">Geography</div>
                <div class="category" data-category="games">Games</div>
                <div class="category" data-category="interactive">Interactive</div>
            </div>
            
            <div class="apps-container" id="toddler-apps-container">
                <!-- Toddler app cards will be added here -->
            </div>
        </div>
        
        <div id="elementary-apps" style="display: none;">
            <div class="categories">
                <div class="category active" data-category="all">All</div>
                <div class="category" data-category="math">Math</div>
                <div class="category" data-category="music">Music</div>
                <div class="category" data-category="language">Language</div>
                <div class="category" data-category="geography">Geography</div>
                <div class="category" data-category="games">Games</div>
                <div class="category" data-category="interactive">Interactive</div>
            </div>
            
            <div class="apps-container" id="elementary-apps-container">
                <!-- Elementary app cards will be added here -->
            </div>
        </div>
        
        <div class="achievements">
            <div class="achievements-title">Your Achievements</div>
            <div class="achievements-grid">
                <div class="achievement-card">
                    <div class="achievement-title">
                        <div class="achievement-icon"><i class="fas fa-trophy"></i></div>
                        <div>Math Master</div>
                    </div>
                    <div>Complete 10 math games</div>
                    <div class="achievement-progress">
                        <div class="achievement-progress-bar" style="width: 70%;"></div>
                    </div>
                    <div style="text-align: right; margin-top: 5px; font-size: 12px;">7/10</div>
                </div>
                
                <div class="achievement-card">
                    <div class="achievement-title">
                        <div class="achievement-icon"><i class="fas fa-music"></i></div>
                        <div>Music Explorer</div>
                    </div>
                    <div>Play 5 music games</div>
                    <div class="achievement-progress">
                        <div class="achievement-progress-bar" style="width: 40%;"></div>
                    </div>
                    <div style="text-align: right; margin-top: 5px; font-size: 12px;">2/5</div>
                </div>
                
                <div class="achievement-card">
                    <div class="achievement-title">
                        <div class="achievement-icon"><i class="fas fa-book"></i></div>
                        <div>Word Wizard</div>
                    </div>
                    <div>Complete 8 language games</div>
                    <div class="achievement-progress">
                        <div class="achievement-progress-bar" style="width: 25%;"></div>
                    </div>
                    <div style="text-align: right; margin-top: 5px; font-size: 12px;">2/8</div>
                </div>
            </div>
        </div>
        
        <footer>
            <div>© 2025 Lojikli Learning - Educational Games for Kids</div>
            <div class="footer-links">
                <a href="#" class="footer-link">About</a>
                <a href="#" class="footer-link">Contact</a>
                <a href="#" class="footer-link">Privacy Policy</a>
                <a href="#" class="footer-link">Terms of Use</a>
            </div>
        </footer>
    </div>
    
    <div id="debugInfo">DOM loading...</div>
    
    <script>
        // Define the structure of your repository
        const repository = {
            "2 yr old": [
                // This will be populated by the batch file with HTML filenames
            ],
            "5 yr old": [
                // This will be populated by the batch file with HTML filenames
            ]
        };

        // Recently added games - populated by the batch file based on modification dates
        const recentlyAddedGames = [
            // This will be populated by the batch file with the most recently modified games
            // Each entry will be an object with name, icon, category, description, path
        ];

        // Function to create app cards
        function createAppCards() {
            // Create app cards for toddler apps
            const toddlerContainer = document.getElementById('toddler-apps-container');
            if (toddlerContainer) {
                toddlerContainer.innerHTML = ''; // Clear existing content
                repository["2 yr old"].forEach(filename => {
                    const card = createCardFromFilename(filename, "2 yr old");
                    toddlerContainer.appendChild(card);
                });
            }
            
            // Create app cards for elementary apps
            const elementaryContainer = document.getElementById('elementary-apps-container');
            if (elementaryContainer) {
                elementaryContainer.innerHTML = ''; // Clear existing content
                repository["5 yr old"].forEach(filename => {
                    const card = createCardFromFilename(filename, "5 yr old");
                    elementaryContainer.appendChild(card);
                });
            }
        }

        // Helper function to create a card from a filename
        function createCardFromFilename(filename, directory) {
            const card = document.createElement('div');
            card.className = 'app-card';
            
            // Determine category based on filename
            const categories = getCategoriesFromFilename(filename);
            card.dataset.categories = categories.join(' ');
            
            // Create a more user-friendly name from the filename
            const appName = getPrettyNameFromFilename(filename);
            
            // Create card HTML
            card.innerHTML = `
                <div class="app-icon"><i class="fas fa-${getCategoryIcon(categories[0])}"></i></div>
                <div class="app-info">
                    <div class="app-name">${appName}</div>
                    <div class="app-category">${categories[0]}</div>
                </div>
            `;
            
            // Add click event to open the app
            card.addEventListener('click', () => {
                window.location.href = `${directory}/${filename}`;
            });
            
            return card;
        }

        // Helper function to get categories from filename
        function getCategoriesFromFilename(filename) {
            const filenameLower = filename.toLowerCase();
            let categories = ['interactive']; // Default category
            
            if (filenameLower.match(/math|algebra|calculus|fraction|multiply|division|number|equation/)) {
                categories = ['math'];
            } else if (filenameLower.match(/music|piano|midi|note|melody/)) {
                categories = ['music'];
            } else if (filenameLower.match(/country|geo|globe|map/)) {
                categories = ['geography'];
            } else if (filenameLower.match(/read|writing|word|letter/)) {
                categories = ['language'];
            } else if (filenameLower.match(/game|battle|pacman|connect|snake|puzzle|shooter/)) {
                categories = ['games'];
            }
            
            return categories;
        }

        // Helper function to get pretty name from filename
        function getPrettyNameFromFilename(filename) {
            return filename
                .replace('.html', '')
                .replace(/-/g, ' ')
                .replace(/_/g, ' ')
                .replace(/v\d+(\.\d+)*/i, '')  // Remove version numbers
                .replace(/\.\.$/, '')  // Remove trailing dots
                .trim();
        }

        // Helper function to get icon for category
        function getCategoryIcon(category) {
            switch (category) {
                case 'math': return 'calculator';
                case 'music': return 'music';
                case 'geography': return 'globe-americas';
                case 'language': return 'book';
                case 'games': return 'gamepad';
                default: return 'puzzle-piece';
            }
        }

        // Function to setup new games slider
        function setupNewGamesSlider() {
            const sliderContainer = document.getElementById('new-games-slider');
            if (!sliderContainer) return;
            
            // Clear existing content
            sliderContainer.innerHTML = '';
            
            // Add game cards to the slider
            recentlyAddedGames.forEach(game => {
                const gameCard = document.createElement('div');
                gameCard.className = 'game-card';
                
                gameCard.innerHTML = `
                    <div class="game-icon"><i class="${game.icon}"></i></div>
                    <div class="game-info">
                        <h3>${game.name}</h3>
                        <div class="game-category">${game.category}</div>
                        <p>${game.description}</p>
                    </div>
                `;
                
                // Add click event to open the game
                gameCard.addEventListener('click', () => {
                    window.location.href = game.path;
                });
                
                sliderContainer.appendChild(gameCard);
            });
        }

        // Function to setup slider arrows
        function setupSliderArrows() {
            const slider = document.getElementById('new-games-slider');
            const nextArrow = document.querySelector('.next-arrow');
            const prevArrow = document.querySelector('.prev-arrow');
            
            if (slider && nextArrow && prevArrow) {
                nextArrow.addEventListener('click', () => {
                    slider.scrollBy({
                        left: 300,
                        behavior: 'smooth'
                    });
                });
                
                prevArrow.addEventListener('click', () => {
                    slider.scrollBy({
                        left: -300,
                        behavior: 'smooth'
                    });
                });
            }
        }
        
        // Handle category filtering
        function setupCategoryFiltering() {
            const categories = document.querySelectorAll('.category');
            const appCards = document.querySelectorAll('.app-card');
            
            categories.forEach(category => {
                category.addEventListener('click', () => {
                    // Update active state
                    categories.forEach(cat => cat.classList.remove('active'));
                    category.classList.add('active');
                    
                    const selectedCategory = category.dataset.category;
                    
                    // Filter the app cards
                    appCards.forEach(card => {
                        const cardCategories = card.dataset.categories.split(" ");
                        
                        if (selectedCategory === 'all' || cardCategories.includes(selectedCategory)) {
                            card.style.display = 'flex';
                        } else {
                            card.style.display = 'none';
                        }
                    });
                });
            });
        }
        
        // Handle search functionality
        function setupSearch() {
            const searchBox = document.getElementById('searchBox');
            const appCards = document.querySelectorAll('.app-card');
            
            searchBox.addEventListener('input', () => {
                const searchTerm = searchBox.value.toLowerCase();
                
                appCards.forEach(card => {
                    const appName = card.querySelector('.app-name').textContent.toLowerCase();
                    
                    if (appName.includes(searchTerm)) {
                        card.style.display = 'flex';
                    } else {
                        card.style.display = 'none';
                    }
                });
            });
        }
        
        // Setup age tabs
        function setupAgeTabs() {
            const ageTabs = document.querySelectorAll('.age-tab');
            const toddlerApps = document.getElementById('toddler-apps');
            const elementaryApps = document.getElementById('elementary-apps');
            
            ageTabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    // Update active state
                    ageTabs.forEach(t => t.classList.remove('active'));
                    tab.classList.add('active');
                    
                    const selectedAge = tab.dataset.age;
                    
                    // Show/hide appropriate section
                    if (selectedAge === 'toddler') {
                        toddlerApps.style.display = 'block';
                        elementaryApps.style.display = 'none';
                    } else {
                        toddlerApps.style.display = 'none';
                        elementaryApps.style.display = 'block';
                    }
                });
            });
        }
        
        // Setup achievement animations
        function setupAchievementAnimations() {
            const achievementCards = document.querySelectorAll('.achievement-card');
            
            // Function to animate progress bars
            function animateProgressBars() {
                achievementCards.forEach(card => {
                    const progressBar = card.querySelector('.achievement-progress-bar');
                    const widthValue = progressBar.style.width;
                    
                    // Reset width to 0 first
                    progressBar.style.width = '0';
                    
                    // Set a timeout to animate to the actual width
                    setTimeout(() => {
                        progressBar.style.width = widthValue;
                    }, 300);
                });
            }
            
            // Use Intersection Observer to trigger animations when cards are visible
            if ('IntersectionObserver' in window) {
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            animateProgressBars();
                            observer.unobserve(entry.target);
                        }
                    });
                }, { threshold: 0.1 });
                
                // Observe the achievement section
                const achievementSection = document.querySelector('.achievements');
                if (achievementSection) {
                    observer.observe(achievementSection);
                }
            } else {
                // Fallback for browsers that don't support IntersectionObserver
                window.addEventListener('scroll', function() {
                    const achievementSection = document.querySelector('.achievements');
                    const rect = achievementSection.getBoundingClientRect();
                    const isVisible = rect.top < window.innerHeight && rect.bottom >= 0;
                    
                    if (isVisible) {
                        animateProgressBars();
                        window.removeEventListener('scroll', this);
                    }
                });
            }
        }

        // Initialize on page load
        document.addEventListener('DOMContentLoaded', function() {
            createAppCards();
            setupCategoryFiltering();
            setupSearch();
            setupAgeTabs();
            setupNewGamesSlider();
            setupAchievementAnimations();
            setupSliderArrows();
            
            // Add slight delay to app cards appearance for a staggered animation effect
            const appCards = document.querySelectorAll('.app-card');
            appCards.forEach((card, index) => {
                card.style.animationDelay = `${index * 0.05}s`;
            });
            
            const debugInfo = document.getElementById('debugInfo');
            debugInfo.innerHTML = "DOM loaded successfully";
        });
    </script>
</body>
</html>